stages:
  - publish
  - release
  - sonar

variables:
  PROJECT_FILE: "./TaxCollectData.Library/TaxCollectData.Library.csproj"
  NUGET_API_KEY: $NEXUS_NUGET_API_KEY

publish:
  stage: publish
  image: $DOCKER_REGISTRY/dotnet/core/sdk:latest
  script:
    - echo "Authenticating to Nexus NuGet repository..."
    - dotnet nuget add source $NEXUS_REPO_URL -n nexus -u $MAVEN_USERNAME -p $MAVEN_PASSWORD --store-password-in-clear-text --allow-insecure-connections
    - echo "Building the project..."
    - dotnet build $PROJECT_FILE --configuration Release
    - echo "Packing the NuGet package..."
    - dotnet pack $PROJECT_FILE --configuration Release --output ./artifacts
    - echo "Publishing the NuGet package to Nexus..."
    - PACKAGE_FILE=$(ls ./artifacts/*.nupkg | head -n 1)
    - if [ -z "$PACKAGE_FILE" ]; then echo "No NuGet package found! Exiting." && exit 1; fi
    - dotnet nuget push "$PACKAGE_FILE" --source nexus
  rules:
    - if: $CI_COMMIT_TAG

gitlab_release:
  stage: release
  image: $DOCKER_REGISTRY/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Running the release job."
  release:
    tag_name: $CI_COMMIT_TAG
    name: 'Release $CI_COMMIT_TAG'
    description: 'Release created using the release-cli.'

sonarqube-check:
  stage: sonar
  image: $DOCKER_REGISTRY/dotnet/sdk:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
      - "apt-get update"
      - "apt-get install --yes openjdk-17-jre"
      - "dotnet tool install --global dotnet-sonarscanner"
      - "export PATH=\"$PATH:$HOME/.dotnet/tools\""
      - "dotnet sonarscanner begin /k:\"Tax-Collect-Data-SDK-dotnet\" /d:sonar.login=\"$SONAR_TOKEN\" /d:\"sonar.host.url=$SONAR_HOST_URL\" "
      - "dotnet build"
      - "dotnet sonarscanner end /d:sonar.login=\"$SONAR_TOKEN\""
  allow_failure: true
  only:
    - master